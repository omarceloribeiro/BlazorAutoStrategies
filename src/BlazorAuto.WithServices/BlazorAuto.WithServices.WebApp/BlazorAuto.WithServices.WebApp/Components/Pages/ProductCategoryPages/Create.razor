@page "/productcategories/create"
@inject BlazorAuto.WithServices.DataEF.AppDbContext DB
@using BlazorAuto.WithServices.Core.Models
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>ProductCategory</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="ProductCategory" OnValidSubmit="AddProductCategory" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="title" class="form-label">Title:</label> 
                <InputText id="title" @bind-Value="ProductCategory.Title" class="form-control" /> 
                <ValidationMessage For="() => ProductCategory.Title" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label> 
                <InputText id="description" @bind-Value="ProductCategory.Description" class="form-control" /> 
                <ValidationMessage For="() => ProductCategory.Description" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="order" class="form-label">Order:</label> 
                <InputNumber id="order" @bind-Value="ProductCategory.Order" class="form-control" /> 
                <ValidationMessage For="() => ProductCategory.Order" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/productcategories">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public ProductCategory ProductCategory { get; set; } = new() { Title = "" };

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddProductCategory()
    {
        DB.ProductCategories.Add(ProductCategory);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/productcategories");
    }
}
