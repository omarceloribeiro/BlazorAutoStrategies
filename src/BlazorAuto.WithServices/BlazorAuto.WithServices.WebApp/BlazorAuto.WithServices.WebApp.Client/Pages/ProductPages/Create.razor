@page "/products-wasm/create"
@rendermode InteractiveAuto
@using BlazorAuto.WithServices.ApplicationShared.Handlers.Responses
@using BlazorAuto.WithServices.ApplicationShared.Interfaces.Services
@inject NavigationManager NavigationManager
@inject IProductAppService _productService
@inject IProductCategoryAppService _categoryService

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Product" OnValidSubmit="AddProduct" FormName="create" Enhance>
            <DataAnnotationsValidator />

            <ValidationSummary class="text-danger" />

            <div class="mb-3">
                <label for="name" class="form-label">Name:</label>
                <InputText id="name" @bind-Value="Product.Name" class="form-control" />
                <ValidationMessage For="() => Product.Name" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label>
                <InputText id="description" @bind-Value="Product.Description" class="form-control" />
                <ValidationMessage For="() => Product.Description" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="price" class="form-label">Price:</label>
                <InputNumber id="price" @bind-Value="Product.Price" class="form-control" />
                <ValidationMessage For="() => Product.Price" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="categoryid" class="form-label">Category</label>
                <InputSelect id="categoryid" @bind-Value="Product.CategoryId" class="form-control" >
                    <option value="">
                        Select ...
                    </option>
                    @foreach (var category in Categories)
                    {
                        <option checked="@(Product.CategoryId == category.Id)"
                                value="@category.Id">
                            @category.Title
                        </option>
                    }
                    
                </InputSelect>
                @* <InputNumber id="categoryid" @bind-Value="Product.CategoryId" class="form-control" /> *@
                <ValidationMessage For="() => Product.CategoryId" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Create</button>

        </EditForm>
    </div>
</div>

<div>
    <a href="/products-wasm">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public ProductInput Product { get; set; } = new();

    public IEnumerable<ProductCategoryResponse> Categories = new List<ProductCategoryResponse>();

    protected override async Task OnInitializedAsync()
    {
        Categories = await _categoryService.ReadAll();
    }
    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddProduct()
    {
        var productRequest = new ApplicationShared.Handlers.Requests.CreateOrUpdateProductRequest()
            {
                Id = Product.Id,
                Name = Product.Name ?? string.Empty,
                Description = Product.Description ?? string.Empty,
                Price = Product.Price ?? 0,
                CategoryId = Product.CategoryId ?? 0,
                CategoryTitle = Product.CategoryName

            };
        await _productService.CreateProduct(productRequest);
        NavigationManager.NavigateTo("/products-wasm");
    }
}
